// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ActivityScreen snapshot renders ActivityScreen correctly with bar & with timer & with sound feedback: ./__snapshots__/snap6.js.snap 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#7d84b2",
      },
      Object {
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "alignSelf": "center",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "padding": 40.019999999999996,
        "paddingLeft": 72.036,
        "position": "absolute",
        "top": 0,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 50,
          "textShadowColor": "rgba(0, 0, 0, 0.6)",
          "textShadowOffset": Object {
            "height": 2,
            "width": 2,
          },
          "textShadowRadius": 15,
        }
      }
    >
      Fazer a cama
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 0,
        "elevation": 1,
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "left": 0,
        "padding": 40.019999999999996,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#c5cbd3",
          "borderColor": "rgba(0, 0, 0, 0)",
          "borderRadius": 53.35999999999999,
          "borderWidth": 0,
          "elevation": 6,
          "flexGrow": 1,
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "overflow": "hidden",
          "position": "relative",
        }
      }
    >
      <View
        animated={true}
        animationConfig={
          Object {
            "bounciness": 0,
          }
        }
        animationType="spring"
        indeterminate={false}
        onLayout={[Function]}
        progress={0}
        style={
          Array [
            Object {
              "backgroundColor": undefined,
              "borderColor": "red",
              "borderRadius": 106.71999999999998,
              "borderWidth": 0,
              "overflow": "hidden",
              "width": null,
            },
            undefined,
          ]
        }
        useNativeDriver={false}
      >
        <View
          style={
            Object {
              "backgroundColor": "#474647",
              "height": 106.71999999999998,
              "transform": Array [
                Object {
                  "translateX": -0,
                },
                Object {
                  "translateX": -0,
                },
                Object {
                  "scaleX": 0.0001,
                },
              ],
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "left": "0%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "left": "50%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "left": "75%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#fff",
            "fontFamily": "LinotteBold",
            "fontSize": 20,
            "left": 40.019999999999996,
            "padding": 6,
            "position": "absolute",
            "textShadowColor": "rgba(0, 0, 0, 0.4)",
            "textShadowOffset": Object {
              "height": 1,
              "width": 1,
            },
            "textShadowRadius": 5,
          }
        }
      >
        0:00
      </Text>
    </View>
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "aspectRatio": 1,
            "backgroundColor": "#e63b2e",
            "borderRadius": 53.35999999999999,
            "elevation": 6,
            "flexDirection": "row",
            "height": 106.71999999999998,
            "justifyContent": "center",
            "marginRight": 20.009999999999998,
            "marginTop": 10,
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": "35%",
              "tintColor": "#fff",
              "width": "35%",
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#dba159",
          "borderRadius": 53.35999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "35%",
            "tintColor": "#fff",
            "width": "35%",
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#c5cbd3",
          "borderRadius": 80.03999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 160.07999999999998,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "50%",
            "tintColor": "#fff",
            "width": "50%",
          }
        }
      />
    </View>
  </View>
  <View />
</View>
`;

exports[`ActivityScreen snapshot renders ActivityScreen correctly with bar & with timer & with vibration feedback: ./__snapshots__/snap4.js.snap 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#7d84b2",
      },
      Object {
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "alignSelf": "center",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "padding": 40.019999999999996,
        "paddingLeft": 72.036,
        "position": "absolute",
        "top": 0,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 50,
          "textShadowColor": "rgba(0, 0, 0, 0.6)",
          "textShadowOffset": Object {
            "height": 2,
            "width": 2,
          },
          "textShadowRadius": 15,
        }
      }
    >
      Fazer a cama
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 0,
        "elevation": 1,
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "left": 0,
        "padding": 40.019999999999996,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#c5cbd3",
          "borderColor": "rgba(0, 0, 0, 0)",
          "borderRadius": 53.35999999999999,
          "borderWidth": 0,
          "elevation": 6,
          "flexGrow": 1,
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "overflow": "hidden",
          "position": "relative",
        }
      }
    >
      <View
        animated={true}
        animationConfig={
          Object {
            "bounciness": 0,
          }
        }
        animationType="spring"
        indeterminate={false}
        onLayout={[Function]}
        progress={0}
        style={
          Array [
            Object {
              "backgroundColor": undefined,
              "borderColor": "red",
              "borderRadius": 106.71999999999998,
              "borderWidth": 0,
              "overflow": "hidden",
              "width": null,
            },
            undefined,
          ]
        }
        useNativeDriver={false}
      >
        <View
          style={
            Object {
              "backgroundColor": "#474647",
              "height": 106.71999999999998,
              "transform": Array [
                Object {
                  "translateX": -0,
                },
                Object {
                  "translateX": -0,
                },
                Object {
                  "scaleX": 0.0001,
                },
              ],
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "left": "0%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "left": "50%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "left": "75%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#fff",
            "fontFamily": "LinotteBold",
            "fontSize": 20,
            "left": 40.019999999999996,
            "padding": 6,
            "position": "absolute",
            "textShadowColor": "rgba(0, 0, 0, 0.4)",
            "textShadowOffset": Object {
              "height": 1,
              "width": 1,
            },
            "textShadowRadius": 5,
          }
        }
      >
        0:00
      </Text>
    </View>
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "aspectRatio": 1,
            "backgroundColor": "#e63b2e",
            "borderRadius": 53.35999999999999,
            "elevation": 6,
            "flexDirection": "row",
            "height": 106.71999999999998,
            "justifyContent": "center",
            "marginRight": 20.009999999999998,
            "marginTop": 10,
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": "35%",
              "tintColor": "#fff",
              "width": "35%",
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#dba159",
          "borderRadius": 53.35999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "35%",
            "tintColor": "#fff",
            "width": "35%",
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#c5cbd3",
          "borderRadius": 80.03999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 160.07999999999998,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "50%",
            "tintColor": "#fff",
            "width": "50%",
          }
        }
      />
    </View>
  </View>
  <View />
</View>
`;

exports[`ActivityScreen snapshot renders ActivityScreen correctly with bar & with timer & with visual feedback: ./__snapshots__/snap5.js.snap 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#7d84b2",
      },
      Object {
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "alignSelf": "center",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "padding": 40.019999999999996,
        "paddingLeft": 72.036,
        "position": "absolute",
        "top": 0,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 50,
          "textShadowColor": "rgba(0, 0, 0, 0.6)",
          "textShadowOffset": Object {
            "height": 2,
            "width": 2,
          },
          "textShadowRadius": 15,
        }
      }
    >
      Fazer a cama
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 0,
        "elevation": 1,
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "left": 0,
        "padding": 40.019999999999996,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#c5cbd3",
          "borderColor": "rgba(0, 0, 0, 0)",
          "borderRadius": 53.35999999999999,
          "borderWidth": 0,
          "elevation": 6,
          "flexGrow": 1,
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "overflow": "hidden",
          "position": "relative",
        }
      }
    >
      <View
        animated={true}
        animationConfig={
          Object {
            "bounciness": 0,
          }
        }
        animationType="spring"
        indeterminate={false}
        onLayout={[Function]}
        progress={0}
        style={
          Array [
            Object {
              "backgroundColor": undefined,
              "borderColor": "red",
              "borderRadius": 106.71999999999998,
              "borderWidth": 0,
              "overflow": "hidden",
              "width": null,
            },
            undefined,
          ]
        }
        useNativeDriver={false}
      >
        <View
          style={
            Object {
              "backgroundColor": "#474647",
              "height": 106.71999999999998,
              "transform": Array [
                Object {
                  "translateX": -0,
                },
                Object {
                  "translateX": -0,
                },
                Object {
                  "scaleX": 0.0001,
                },
              ],
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "left": "0%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "left": "50%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "left": "75%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#fff",
            "fontFamily": "LinotteBold",
            "fontSize": 20,
            "left": 40.019999999999996,
            "padding": 6,
            "position": "absolute",
            "textShadowColor": "rgba(0, 0, 0, 0.4)",
            "textShadowOffset": Object {
              "height": 1,
              "width": 1,
            },
            "textShadowRadius": 5,
          }
        }
      >
        0:00
      </Text>
    </View>
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "aspectRatio": 1,
            "backgroundColor": "#e63b2e",
            "borderRadius": 53.35999999999999,
            "elevation": 6,
            "flexDirection": "row",
            "height": 106.71999999999998,
            "justifyContent": "center",
            "marginRight": 20.009999999999998,
            "marginTop": 10,
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": "35%",
              "tintColor": "#fff",
              "width": "35%",
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#dba159",
          "borderRadius": 53.35999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "35%",
            "tintColor": "#fff",
            "width": "35%",
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#c5cbd3",
          "borderRadius": 80.03999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 160.07999999999998,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "50%",
            "tintColor": "#fff",
            "width": "50%",
          }
        }
      />
    </View>
  </View>
  <View />
</View>
`;

exports[`ActivityScreen snapshot renders ActivityScreen correctly with bar & without timer & with sound feedback: ./__snapshots__/snap3.js.snap 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#7d84b2",
      },
      Object {
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "alignSelf": "center",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "padding": 40.019999999999996,
        "paddingLeft": 72.036,
        "position": "absolute",
        "top": 0,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 50,
          "textShadowColor": "rgba(0, 0, 0, 0.6)",
          "textShadowOffset": Object {
            "height": 2,
            "width": 2,
          },
          "textShadowRadius": 15,
        }
      }
    >
      Fazer a cama
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 0,
        "elevation": 1,
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "left": 0,
        "padding": 40.019999999999996,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#c5cbd3",
          "borderColor": "rgba(0, 0, 0, 0)",
          "borderRadius": 53.35999999999999,
          "borderWidth": 0,
          "elevation": 6,
          "flexGrow": 1,
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "overflow": "hidden",
          "position": "relative",
        }
      }
    >
      <View
        animated={true}
        animationConfig={
          Object {
            "bounciness": 0,
          }
        }
        animationType="spring"
        indeterminate={false}
        onLayout={[Function]}
        progress={0}
        style={
          Array [
            Object {
              "backgroundColor": undefined,
              "borderColor": "red",
              "borderRadius": 106.71999999999998,
              "borderWidth": 0,
              "overflow": "hidden",
              "width": null,
            },
            undefined,
          ]
        }
        useNativeDriver={false}
      >
        <View
          style={
            Object {
              "backgroundColor": "#474647",
              "height": 106.71999999999998,
              "transform": Array [
                Object {
                  "translateX": -0,
                },
                Object {
                  "translateX": -0,
                },
                Object {
                  "scaleX": 0.0001,
                },
              ],
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "left": "0%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "left": "50%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "left": "75%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
    </View>
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "aspectRatio": 1,
            "backgroundColor": "#e63b2e",
            "borderRadius": 53.35999999999999,
            "elevation": 6,
            "flexDirection": "row",
            "height": 106.71999999999998,
            "justifyContent": "center",
            "marginRight": 20.009999999999998,
            "marginTop": 10,
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": "35%",
              "tintColor": "#fff",
              "width": "35%",
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#dba159",
          "borderRadius": 53.35999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "35%",
            "tintColor": "#fff",
            "width": "35%",
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#c5cbd3",
          "borderRadius": 80.03999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 160.07999999999998,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "50%",
            "tintColor": "#fff",
            "width": "50%",
          }
        }
      />
    </View>
  </View>
  <View />
</View>
`;

exports[`ActivityScreen snapshot renders ActivityScreen correctly with bar & without timer & with vibration feedback: ./__snapshots__/snap1.js.snap 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#7d84b2",
      },
      Object {
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "alignSelf": "center",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "padding": 40.019999999999996,
        "paddingLeft": 72.036,
        "position": "absolute",
        "top": 0,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 50,
          "textShadowColor": "rgba(0, 0, 0, 0.6)",
          "textShadowOffset": Object {
            "height": 2,
            "width": 2,
          },
          "textShadowRadius": 15,
        }
      }
    >
      Fazer a cama
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 0,
        "elevation": 1,
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "left": 0,
        "padding": 40.019999999999996,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#c5cbd3",
          "borderColor": "rgba(0, 0, 0, 0)",
          "borderRadius": 53.35999999999999,
          "borderWidth": 0,
          "elevation": 6,
          "flexGrow": 1,
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "overflow": "hidden",
          "position": "relative",
        }
      }
    >
      <View
        animated={true}
        animationConfig={
          Object {
            "bounciness": 0,
          }
        }
        animationType="spring"
        indeterminate={false}
        onLayout={[Function]}
        progress={0}
        style={
          Array [
            Object {
              "backgroundColor": undefined,
              "borderColor": "red",
              "borderRadius": 106.71999999999998,
              "borderWidth": 0,
              "overflow": "hidden",
              "width": null,
            },
            undefined,
          ]
        }
        useNativeDriver={false}
      >
        <View
          style={
            Object {
              "backgroundColor": "#474647",
              "height": 106.71999999999998,
              "transform": Array [
                Object {
                  "translateX": -0,
                },
                Object {
                  "translateX": -0,
                },
                Object {
                  "scaleX": 0.0001,
                },
              ],
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "left": "0%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "left": "50%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "left": "75%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
    </View>
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "aspectRatio": 1,
            "backgroundColor": "#e63b2e",
            "borderRadius": 53.35999999999999,
            "elevation": 6,
            "flexDirection": "row",
            "height": 106.71999999999998,
            "justifyContent": "center",
            "marginRight": 20.009999999999998,
            "marginTop": 10,
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": "35%",
              "tintColor": "#fff",
              "width": "35%",
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#dba159",
          "borderRadius": 53.35999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "35%",
            "tintColor": "#fff",
            "width": "35%",
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#c5cbd3",
          "borderRadius": 80.03999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 160.07999999999998,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "50%",
            "tintColor": "#fff",
            "width": "50%",
          }
        }
      />
    </View>
  </View>
  <View />
</View>
`;

exports[`ActivityScreen snapshot renders ActivityScreen correctly with bar & without timer & with visual feedback: ./__snapshots__/snap2.js.snap 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#7d84b2",
      },
      Object {
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "alignSelf": "center",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "padding": 40.019999999999996,
        "paddingLeft": 72.036,
        "position": "absolute",
        "top": 0,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 50,
          "textShadowColor": "rgba(0, 0, 0, 0.6)",
          "textShadowOffset": Object {
            "height": 2,
            "width": 2,
          },
          "textShadowRadius": 15,
        }
      }
    >
      Fazer a cama
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 0,
        "elevation": 1,
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "left": 0,
        "padding": 40.019999999999996,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#c5cbd3",
          "borderColor": "rgba(0, 0, 0, 0)",
          "borderRadius": 53.35999999999999,
          "borderWidth": 0,
          "elevation": 6,
          "flexGrow": 1,
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "overflow": "hidden",
          "position": "relative",
        }
      }
    >
      <View
        animated={true}
        animationConfig={
          Object {
            "bounciness": 0,
          }
        }
        animationType="spring"
        indeterminate={false}
        onLayout={[Function]}
        progress={0}
        style={
          Array [
            Object {
              "backgroundColor": undefined,
              "borderColor": "red",
              "borderRadius": 106.71999999999998,
              "borderWidth": 0,
              "overflow": "hidden",
              "width": null,
            },
            undefined,
          ]
        }
        useNativeDriver={false}
      >
        <View
          style={
            Object {
              "backgroundColor": "#474647",
              "height": 106.71999999999998,
              "transform": Array [
                Object {
                  "translateX": -0,
                },
                Object {
                  "translateX": -0,
                },
                Object {
                  "scaleX": 0.0001,
                },
              ],
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "left": "0%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "left": "50%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "left": "75%",
            },
            Object {
              "borderRightColor": "#000",
              "borderRightWidth": 2,
              "height": 106.71999999999998,
              "opacity": 0.5,
              "position": "absolute",
            },
          ]
        }
      />
    </View>
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "aspectRatio": 1,
            "backgroundColor": "#e63b2e",
            "borderRadius": 53.35999999999999,
            "elevation": 6,
            "flexDirection": "row",
            "height": 106.71999999999998,
            "justifyContent": "center",
            "marginRight": 20.009999999999998,
            "marginTop": 10,
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": "35%",
              "tintColor": "#fff",
              "width": "35%",
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#dba159",
          "borderRadius": 53.35999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "35%",
            "tintColor": "#fff",
            "width": "35%",
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#c5cbd3",
          "borderRadius": 80.03999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 160.07999999999998,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "50%",
            "tintColor": "#fff",
            "width": "50%",
          }
        }
      />
    </View>
  </View>
  <View />
</View>
`;

exports[`ActivityScreen snapshot renders ActivityScreen correctly with clock & with timer & with sound feedback: ./__snapshots__/snap12.js.snap 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#7d84b2",
      },
      Object {
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "alignSelf": "center",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "padding": 40.019999999999996,
        "paddingLeft": 72.036,
        "position": "absolute",
        "top": 0,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 50,
          "textShadowColor": "rgba(0, 0, 0, 0.6)",
          "textShadowOffset": Object {
            "height": 2,
            "width": 2,
          },
          "textShadowRadius": 15,
        }
      }
    >
      Fazer a cama
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 1)",
        "borderRadius": 166.07999999999998,
        "bottom": 40.019999999999996,
        "elevation": 6,
        "height": 332.15999999999997,
        "justifyContent": "center",
        "left": 40.019999999999996,
        "position": "absolute",
        "width": 332.15999999999997,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <ARTSurfaceView
        style={
          Array [
            Object {
              "transform": Array [
                Object {
                  "rotate": "0deg",
                },
              ],
            },
            Object {
              "height": 320.15999999999997,
              "width": 320.15999999999997,
            },
          ]
        }
      >
        <ARTShape
          d={
            Array [
              0,
              160.07999999999998,
              80.03999999999999,
              4,
              160.07999999999998,
              160.07999999999998,
              80.03999999999999,
              -1.5707963267948966,
              1.5707963267948966,
              1,
              4,
              160.07999999999998,
              160.07999999999998,
              80.03999999999999,
              1.5707963267948966,
              -1.5707963267948966,
              1,
              1,
            ]
          }
          fill={null}
          opacity={1}
          stroke={
            Array [
              0.7725490196078432,
              0.796078431372549,
              0.8274509803921568,
              1,
            ]
          }
          strokeCap={0}
          strokeDash={null}
          strokeJoin={1}
          strokeWidth={160.07999999999998}
          transform={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
        />
        <ARTShape
          d={
            Array [
              0,
              160.07999999999998,
              80.03999999999999,
              2,
              160.07999999999998,
              80.03999999999999,
            ]
          }
          fill={null}
          opacity={1}
          stroke={
            Array [
              0.2784313725490196,
              0.27450980392156865,
              0.2784313725490196,
              1,
            ]
          }
          strokeCap={0}
          strokeDash={null}
          strokeJoin={1}
          strokeWidth={160.07999999999998}
          transform={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
        />
      </ARTSurfaceView>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 20,
          "padding": 6,
          "position": "absolute",
          "textShadowColor": "rgba(0, 0, 0, 0.4)",
          "textShadowOffset": Object {
            "height": 1,
            "width": 1,
          },
          "textShadowRadius": 5,
        }
      }
    >
      0:00
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 0,
        "elevation": 1,
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "left": 0,
        "padding": 40.019999999999996,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "aspectRatio": 1,
            "backgroundColor": "#e63b2e",
            "borderRadius": 53.35999999999999,
            "elevation": 6,
            "flexDirection": "row",
            "height": 106.71999999999998,
            "justifyContent": "center",
            "marginRight": 20.009999999999998,
            "marginTop": 10,
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": "35%",
              "tintColor": "#fff",
              "width": "35%",
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#dba159",
          "borderRadius": 53.35999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "35%",
            "tintColor": "#fff",
            "width": "35%",
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#c5cbd3",
          "borderRadius": 80.03999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 160.07999999999998,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "50%",
            "tintColor": "#fff",
            "width": "50%",
          }
        }
      />
    </View>
  </View>
  <View />
</View>
`;

exports[`ActivityScreen snapshot renders ActivityScreen correctly with clock & with timer & with vibration feedback: ./__snapshots__/snap10.js.snap 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#7d84b2",
      },
      Object {
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "alignSelf": "center",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "padding": 40.019999999999996,
        "paddingLeft": 72.036,
        "position": "absolute",
        "top": 0,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 50,
          "textShadowColor": "rgba(0, 0, 0, 0.6)",
          "textShadowOffset": Object {
            "height": 2,
            "width": 2,
          },
          "textShadowRadius": 15,
        }
      }
    >
      Fazer a cama
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 1)",
        "borderRadius": 166.07999999999998,
        "bottom": 40.019999999999996,
        "elevation": 6,
        "height": 332.15999999999997,
        "justifyContent": "center",
        "left": 40.019999999999996,
        "position": "absolute",
        "width": 332.15999999999997,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <ARTSurfaceView
        style={
          Array [
            Object {
              "transform": Array [
                Object {
                  "rotate": "0deg",
                },
              ],
            },
            Object {
              "height": 320.15999999999997,
              "width": 320.15999999999997,
            },
          ]
        }
      >
        <ARTShape
          d={
            Array [
              0,
              160.07999999999998,
              80.03999999999999,
              4,
              160.07999999999998,
              160.07999999999998,
              80.03999999999999,
              -1.5707963267948966,
              1.5707963267948966,
              1,
              4,
              160.07999999999998,
              160.07999999999998,
              80.03999999999999,
              1.5707963267948966,
              -1.5707963267948966,
              1,
              1,
            ]
          }
          fill={null}
          opacity={1}
          stroke={
            Array [
              0.7725490196078432,
              0.796078431372549,
              0.8274509803921568,
              1,
            ]
          }
          strokeCap={0}
          strokeDash={null}
          strokeJoin={1}
          strokeWidth={160.07999999999998}
          transform={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
        />
        <ARTShape
          d={
            Array [
              0,
              160.07999999999998,
              80.03999999999999,
              2,
              160.07999999999998,
              80.03999999999999,
            ]
          }
          fill={null}
          opacity={1}
          stroke={
            Array [
              0.2784313725490196,
              0.27450980392156865,
              0.2784313725490196,
              1,
            ]
          }
          strokeCap={0}
          strokeDash={null}
          strokeJoin={1}
          strokeWidth={160.07999999999998}
          transform={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
        />
      </ARTSurfaceView>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 20,
          "padding": 6,
          "position": "absolute",
          "textShadowColor": "rgba(0, 0, 0, 0.4)",
          "textShadowOffset": Object {
            "height": 1,
            "width": 1,
          },
          "textShadowRadius": 5,
        }
      }
    >
      0:00
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 0,
        "elevation": 1,
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "left": 0,
        "padding": 40.019999999999996,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "aspectRatio": 1,
            "backgroundColor": "#e63b2e",
            "borderRadius": 53.35999999999999,
            "elevation": 6,
            "flexDirection": "row",
            "height": 106.71999999999998,
            "justifyContent": "center",
            "marginRight": 20.009999999999998,
            "marginTop": 10,
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": "35%",
              "tintColor": "#fff",
              "width": "35%",
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#dba159",
          "borderRadius": 53.35999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "35%",
            "tintColor": "#fff",
            "width": "35%",
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#c5cbd3",
          "borderRadius": 80.03999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 160.07999999999998,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "50%",
            "tintColor": "#fff",
            "width": "50%",
          }
        }
      />
    </View>
  </View>
  <View />
</View>
`;

exports[`ActivityScreen snapshot renders ActivityScreen correctly with clock & with timer & with visual feedback: ./__snapshots__/snap11.js.snap 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#7d84b2",
      },
      Object {
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "alignSelf": "center",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "padding": 40.019999999999996,
        "paddingLeft": 72.036,
        "position": "absolute",
        "top": 0,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 50,
          "textShadowColor": "rgba(0, 0, 0, 0.6)",
          "textShadowOffset": Object {
            "height": 2,
            "width": 2,
          },
          "textShadowRadius": 15,
        }
      }
    >
      Fazer a cama
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 1)",
        "borderRadius": 166.07999999999998,
        "bottom": 40.019999999999996,
        "elevation": 6,
        "height": 332.15999999999997,
        "justifyContent": "center",
        "left": 40.019999999999996,
        "position": "absolute",
        "width": 332.15999999999997,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <ARTSurfaceView
        style={
          Array [
            Object {
              "transform": Array [
                Object {
                  "rotate": "0deg",
                },
              ],
            },
            Object {
              "height": 320.15999999999997,
              "width": 320.15999999999997,
            },
          ]
        }
      >
        <ARTShape
          d={
            Array [
              0,
              160.07999999999998,
              80.03999999999999,
              4,
              160.07999999999998,
              160.07999999999998,
              80.03999999999999,
              -1.5707963267948966,
              1.5707963267948966,
              1,
              4,
              160.07999999999998,
              160.07999999999998,
              80.03999999999999,
              1.5707963267948966,
              -1.5707963267948966,
              1,
              1,
            ]
          }
          fill={null}
          opacity={1}
          stroke={
            Array [
              0.7725490196078432,
              0.796078431372549,
              0.8274509803921568,
              1,
            ]
          }
          strokeCap={0}
          strokeDash={null}
          strokeJoin={1}
          strokeWidth={160.07999999999998}
          transform={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
        />
        <ARTShape
          d={
            Array [
              0,
              160.07999999999998,
              80.03999999999999,
              2,
              160.07999999999998,
              80.03999999999999,
            ]
          }
          fill={null}
          opacity={1}
          stroke={
            Array [
              0.2784313725490196,
              0.27450980392156865,
              0.2784313725490196,
              1,
            ]
          }
          strokeCap={0}
          strokeDash={null}
          strokeJoin={1}
          strokeWidth={160.07999999999998}
          transform={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
        />
      </ARTSurfaceView>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 20,
          "padding": 6,
          "position": "absolute",
          "textShadowColor": "rgba(0, 0, 0, 0.4)",
          "textShadowOffset": Object {
            "height": 1,
            "width": 1,
          },
          "textShadowRadius": 5,
        }
      }
    >
      0:00
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 0,
        "elevation": 1,
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "left": 0,
        "padding": 40.019999999999996,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "aspectRatio": 1,
            "backgroundColor": "#e63b2e",
            "borderRadius": 53.35999999999999,
            "elevation": 6,
            "flexDirection": "row",
            "height": 106.71999999999998,
            "justifyContent": "center",
            "marginRight": 20.009999999999998,
            "marginTop": 10,
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": "35%",
              "tintColor": "#fff",
              "width": "35%",
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#dba159",
          "borderRadius": 53.35999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "35%",
            "tintColor": "#fff",
            "width": "35%",
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#c5cbd3",
          "borderRadius": 80.03999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 160.07999999999998,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "50%",
            "tintColor": "#fff",
            "width": "50%",
          }
        }
      />
    </View>
  </View>
  <View />
</View>
`;

exports[`ActivityScreen snapshot renders ActivityScreen correctly with clock & without timer & with sound feedback: ./__snapshots__/snap9.js.snap 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#7d84b2",
      },
      Object {
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "alignSelf": "center",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "padding": 40.019999999999996,
        "paddingLeft": 72.036,
        "position": "absolute",
        "top": 0,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 50,
          "textShadowColor": "rgba(0, 0, 0, 0.6)",
          "textShadowOffset": Object {
            "height": 2,
            "width": 2,
          },
          "textShadowRadius": 15,
        }
      }
    >
      Fazer a cama
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 1)",
        "borderRadius": 166.07999999999998,
        "bottom": 40.019999999999996,
        "elevation": 6,
        "height": 332.15999999999997,
        "justifyContent": "center",
        "left": 40.019999999999996,
        "position": "absolute",
        "width": 332.15999999999997,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <ARTSurfaceView
        style={
          Array [
            Object {
              "transform": Array [
                Object {
                  "rotate": "0deg",
                },
              ],
            },
            Object {
              "height": 320.15999999999997,
              "width": 320.15999999999997,
            },
          ]
        }
      >
        <ARTShape
          d={
            Array [
              0,
              160.07999999999998,
              80.03999999999999,
              4,
              160.07999999999998,
              160.07999999999998,
              80.03999999999999,
              -1.5707963267948966,
              1.5707963267948966,
              1,
              4,
              160.07999999999998,
              160.07999999999998,
              80.03999999999999,
              1.5707963267948966,
              -1.5707963267948966,
              1,
              1,
            ]
          }
          fill={null}
          opacity={1}
          stroke={
            Array [
              0.7725490196078432,
              0.796078431372549,
              0.8274509803921568,
              1,
            ]
          }
          strokeCap={0}
          strokeDash={null}
          strokeJoin={1}
          strokeWidth={160.07999999999998}
          transform={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
        />
        <ARTShape
          d={
            Array [
              0,
              160.07999999999998,
              80.03999999999999,
              2,
              160.07999999999998,
              80.03999999999999,
            ]
          }
          fill={null}
          opacity={1}
          stroke={
            Array [
              0.2784313725490196,
              0.27450980392156865,
              0.2784313725490196,
              1,
            ]
          }
          strokeCap={0}
          strokeDash={null}
          strokeJoin={1}
          strokeWidth={160.07999999999998}
          transform={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
        />
      </ARTSurfaceView>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 0,
        "elevation": 1,
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "left": 0,
        "padding": 40.019999999999996,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "aspectRatio": 1,
            "backgroundColor": "#e63b2e",
            "borderRadius": 53.35999999999999,
            "elevation": 6,
            "flexDirection": "row",
            "height": 106.71999999999998,
            "justifyContent": "center",
            "marginRight": 20.009999999999998,
            "marginTop": 10,
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": "35%",
              "tintColor": "#fff",
              "width": "35%",
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#dba159",
          "borderRadius": 53.35999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "35%",
            "tintColor": "#fff",
            "width": "35%",
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#c5cbd3",
          "borderRadius": 80.03999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 160.07999999999998,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "50%",
            "tintColor": "#fff",
            "width": "50%",
          }
        }
      />
    </View>
  </View>
  <View />
</View>
`;

exports[`ActivityScreen snapshot renders ActivityScreen correctly with clock & without timer & with vibration feedback: ./__snapshots__/snap7.js.snap 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#7d84b2",
      },
      Object {
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "alignSelf": "center",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "padding": 40.019999999999996,
        "paddingLeft": 72.036,
        "position": "absolute",
        "top": 0,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 50,
          "textShadowColor": "rgba(0, 0, 0, 0.6)",
          "textShadowOffset": Object {
            "height": 2,
            "width": 2,
          },
          "textShadowRadius": 15,
        }
      }
    >
      Fazer a cama
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 1)",
        "borderRadius": 166.07999999999998,
        "bottom": 40.019999999999996,
        "elevation": 6,
        "height": 332.15999999999997,
        "justifyContent": "center",
        "left": 40.019999999999996,
        "position": "absolute",
        "width": 332.15999999999997,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <ARTSurfaceView
        style={
          Array [
            Object {
              "transform": Array [
                Object {
                  "rotate": "0deg",
                },
              ],
            },
            Object {
              "height": 320.15999999999997,
              "width": 320.15999999999997,
            },
          ]
        }
      >
        <ARTShape
          d={
            Array [
              0,
              160.07999999999998,
              80.03999999999999,
              4,
              160.07999999999998,
              160.07999999999998,
              80.03999999999999,
              -1.5707963267948966,
              1.5707963267948966,
              1,
              4,
              160.07999999999998,
              160.07999999999998,
              80.03999999999999,
              1.5707963267948966,
              -1.5707963267948966,
              1,
              1,
            ]
          }
          fill={null}
          opacity={1}
          stroke={
            Array [
              0.7725490196078432,
              0.796078431372549,
              0.8274509803921568,
              1,
            ]
          }
          strokeCap={0}
          strokeDash={null}
          strokeJoin={1}
          strokeWidth={160.07999999999998}
          transform={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
        />
        <ARTShape
          d={
            Array [
              0,
              160.07999999999998,
              80.03999999999999,
              2,
              160.07999999999998,
              80.03999999999999,
            ]
          }
          fill={null}
          opacity={1}
          stroke={
            Array [
              0.2784313725490196,
              0.27450980392156865,
              0.2784313725490196,
              1,
            ]
          }
          strokeCap={0}
          strokeDash={null}
          strokeJoin={1}
          strokeWidth={160.07999999999998}
          transform={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
        />
      </ARTSurfaceView>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 0,
        "elevation": 1,
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "left": 0,
        "padding": 40.019999999999996,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "aspectRatio": 1,
            "backgroundColor": "#e63b2e",
            "borderRadius": 53.35999999999999,
            "elevation": 6,
            "flexDirection": "row",
            "height": 106.71999999999998,
            "justifyContent": "center",
            "marginRight": 20.009999999999998,
            "marginTop": 10,
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": "35%",
              "tintColor": "#fff",
              "width": "35%",
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#dba159",
          "borderRadius": 53.35999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "35%",
            "tintColor": "#fff",
            "width": "35%",
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#c5cbd3",
          "borderRadius": 80.03999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 160.07999999999998,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "50%",
            "tintColor": "#fff",
            "width": "50%",
          }
        }
      />
    </View>
  </View>
  <View />
</View>
`;

exports[`ActivityScreen snapshot renders ActivityScreen correctly with clock & without timer & with visual feedback: ./__snapshots__/snap8.js.snap 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#7d84b2",
      },
      Object {
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "alignSelf": "center",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "padding": 40.019999999999996,
        "paddingLeft": 72.036,
        "position": "absolute",
        "top": 0,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontFamily": "LinotteBold",
          "fontSize": 50,
          "textShadowColor": "rgba(0, 0, 0, 0.6)",
          "textShadowOffset": Object {
            "height": 2,
            "width": 2,
          },
          "textShadowRadius": 15,
        }
      }
    >
      Fazer a cama
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 1)",
        "borderRadius": 166.07999999999998,
        "bottom": 40.019999999999996,
        "elevation": 6,
        "height": 332.15999999999997,
        "justifyContent": "center",
        "left": 40.019999999999996,
        "position": "absolute",
        "width": 332.15999999999997,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <ARTSurfaceView
        style={
          Array [
            Object {
              "transform": Array [
                Object {
                  "rotate": "0deg",
                },
              ],
            },
            Object {
              "height": 320.15999999999997,
              "width": 320.15999999999997,
            },
          ]
        }
      >
        <ARTShape
          d={
            Array [
              0,
              160.07999999999998,
              80.03999999999999,
              4,
              160.07999999999998,
              160.07999999999998,
              80.03999999999999,
              -1.5707963267948966,
              1.5707963267948966,
              1,
              4,
              160.07999999999998,
              160.07999999999998,
              80.03999999999999,
              1.5707963267948966,
              -1.5707963267948966,
              1,
              1,
            ]
          }
          fill={null}
          opacity={1}
          stroke={
            Array [
              0.7725490196078432,
              0.796078431372549,
              0.8274509803921568,
              1,
            ]
          }
          strokeCap={0}
          strokeDash={null}
          strokeJoin={1}
          strokeWidth={160.07999999999998}
          transform={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
        />
        <ARTShape
          d={
            Array [
              0,
              160.07999999999998,
              80.03999999999999,
              2,
              160.07999999999998,
              80.03999999999999,
            ]
          }
          fill={null}
          opacity={1}
          stroke={
            Array [
              0.2784313725490196,
              0.27450980392156865,
              0.2784313725490196,
              1,
            ]
          }
          strokeCap={0}
          strokeDash={null}
          strokeJoin={1}
          strokeWidth={160.07999999999998}
          transform={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
        />
      </ARTSurfaceView>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 0,
        "elevation": 1,
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "left": 0,
        "padding": 40.019999999999996,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "aspectRatio": 1,
            "backgroundColor": "#e63b2e",
            "borderRadius": 53.35999999999999,
            "elevation": 6,
            "flexDirection": "row",
            "height": 106.71999999999998,
            "justifyContent": "center",
            "marginRight": 20.009999999999998,
            "marginTop": 10,
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": "35%",
              "tintColor": "#fff",
              "width": "35%",
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#dba159",
          "borderRadius": 53.35999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 106.71999999999998,
          "justifyContent": "center",
          "marginRight": 20.009999999999998,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "35%",
            "tintColor": "#fff",
            "width": "35%",
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#c5cbd3",
          "borderRadius": 80.03999999999999,
          "elevation": 6,
          "flexDirection": "row",
          "height": 160.07999999999998,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": "50%",
            "tintColor": "#fff",
            "width": "50%",
          }
        }
      />
    </View>
  </View>
  <View />
</View>
`;
