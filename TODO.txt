Complete error recovery
Complete Tree Anotation (For instance, the <ID>s of Function() and FunctionAssign() are not stored)

Do the Semantic Analysis (Run the tree and compare it to the Symbol Tables to do this analysis)
	- verificar se a variavel foi inicializada	
	- ter um set dessas variaveis 
	- ver se os tipos fazem sentidos para as operacoes a serem feitas
	- em a.size  -> a e array
	- em a+b -> a e inteiro
	- se nao for verdade da erro

	- quando aceder uma variavel o funcao, ela tem de existir
	- uma variavel e funcao podem ter o mesmo nome(edited)

Generate JVM code accepted by jasmin correspopnding to the invocation of functions in yal

Generate JVM code accepted by jasmin for arithmetic expressions

Generate JVM code accepted by jasmin for conditional instructions (if and if-else)

Generate JVM code accepted by jasmin for loops

Generate JVM code accepted by jasmin to deal with arrays

Complete the compiler and test it using a set of yal modules.


Low Priority:

Use packages, instead of Java's default package
Stop after the first 10 parser errors
Consider outputting "prettier" (i.e., cleaner and more informative) error messages.